// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package ink.proto.scene_change;

import "ink/proto/geometry.proto";

option javascript_package = "ink.proto.scene_change";
option java_package = "com.google.ink.proto.scenechange";
option java_outer_classname = "SceneChangeProto";

message LayerOrderUpdated {
  // The layer with this uuid is now below the layer with the uuid below_uuid.
  optional string uuid = 1;
  // If empty, this is the top layer.
  optional string below_uuid = 2;
}

message LayerOpacityUpdated {
  optional string uuid = 1;
  optional float opacity = 2;
}

message LayerVisibilityUpdated {
  optional string uuid = 1;
  optional bool visible = 2;
}

message ActiveLayerUpdated {
  optional string active_uuid = 1;
}

message LayerAdded {
  optional string uuid = 1;
  optional float opacity = 2;
  optional bool visible = 3;
  optional string below_uuid = 4;
}

message LayerRemoved {
  optional string uuid = 1;
}

// An element has been added to the scene in the given layer.
message ElementAdded {
  optional string uuid = 1;
  optional string layer_uuid = 2;
}

// An element has been visibly modified in the scene (moving/scaling/etc)
message ElementModified {
  optional string uuid = 1;
  optional string layer_uuid = 2;
}

message ElementRemoved {
  optional string uuid = 1;
  optional string layer_uuid = 2;
}

// A scene change event is emitted by the Ink engine when something changes
// in the scene's contents or configuration. These values are all intended to
// be interpreted by clients and are *not* meant to be serialized in any form.
message SceneChangeEvent {
  oneof event {
    LayerOrderUpdated order_updated = 1;
    LayerOpacityUpdated opacity_updated = 2;
    LayerVisibilityUpdated visibility_updated = 3;
    ActiveLayerUpdated active_layer_updated = 4;
    LayerAdded layer_added = 5;
    LayerRemoved layer_removed = 6;
    ElementAdded element_added = 7;
    ElementModified element_modified = 8;
    ElementRemoved element_removed = 9;
  }
}
